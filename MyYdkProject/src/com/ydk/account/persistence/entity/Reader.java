package com.ydk.account.persistence.entity;

// Generated Feb 6, 2010 2:13:01 PM by Hibernate Tools 3.2.4.GA

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.CascadeType;
import javax.persistence.Embedded;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

/**
 * Reader generated by hbm2java
 */
@Entity
@Table(name = "reader", catalog = "ydk", uniqueConstraints = @UniqueConstraint(columnNames = {
		"nick_name", "email" }))
public class Reader implements java.io.Serializable {

	private Long id;
	private String address;
	private Partner partner;
	private String nickName;
	private String email;
	private String realName;
	private Key currentKeyPair;
	private Key lastKeyPair;
	private Date birthDate;
	private String mobilePhone;
	private String fixPhone;
	private String fax;
	private String portrait;
	private String securityQuestion;
	private String sequrityAnswer;
	private Date registerDate;
	private String personalId;
	private String personalIdType;
	private Long magicNumber;
	private Long lastMagicNumber;
	private Boolean isActived;
	private List<ReaderComment> readerComments = new ArrayList<ReaderComment>(0);
	private List<BookMark> bookMarks = new ArrayList<BookMark>(0);
	private List<Evaluation> evaluations = new ArrayList<Evaluation>(0);
	private List<BookShelf> bookShelves = new ArrayList<BookShelf>(0);
	private List<Transaction> transactions = new ArrayList<Transaction>(0);

	public Reader() {
	}

	public Reader(Partner partner, String nickName, String email) {
		this.partner = partner;
		this.nickName = nickName;
		this.email = email;
	}

	
	public Reader(Long id, String address, Partner partner, String nickName,
			String email, String realName, Key currentKeyPair, Key lastKeyPair,
			Date birthDate, String mobilePhone, String fixPhone, String fax,
			String portrait, String securityQuestion,
			String sequrityAnswer, Date registerDate, String personalId,
			String personalIdType, Long magicNumber, Long lastMagicNumber,
			Boolean isActived, List<ReaderComment> readerComments,
			List<BookMark> bookMarks, List<Evaluation> evaluations,
			List<BookShelf> bookShelves, List<Transaction> transactions) {
		super();
		this.id = id;
		this.address = address;
		this.partner = partner;
		this.nickName = nickName;
		this.email = email;
		this.realName = realName;
		this.currentKeyPair = currentKeyPair;
		this.lastKeyPair = lastKeyPair;
		this.birthDate = birthDate;
		this.mobilePhone = mobilePhone;
		this.fixPhone = fixPhone;
		this.fax = fax;
		this.portrait = portrait;
		this.securityQuestion = securityQuestion;
		this.sequrityAnswer = sequrityAnswer;
		this.registerDate = registerDate;
		this.personalId = personalId;
		this.personalIdType = personalIdType;
		this.magicNumber = magicNumber;
		this.lastMagicNumber = lastMagicNumber;
		this.isActived = isActived;
		this.readerComments = readerComments;
		this.bookMarks = bookMarks;
		this.evaluations = evaluations;
		this.bookShelves = bookShelves;
		this.transactions = transactions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "address")
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "partner_id")
	public Partner getPartner() {
		return this.partner;
	}

	public void setPartner(Partner partner) {
		this.partner = partner;
	}

	@Column(name = "nick_name", nullable = false)
	public String getNickName() {
		return this.nickName;
	}

	public void setNickName(String nickName) {
		this.nickName = nickName;
	}

	@Column(name = "email", nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "real_name")
	public String getRealName() {
		return this.realName;
	}

	public void setRealName(String realName) {
		this.realName = realName;
	}

	
	@Embedded
	@Column(name = "current_key_pair")
	public Key getCurrentKeyPair() {
		return this.currentKeyPair;
	}

	public void setCurrentKeyPair(Key currentKeyPair) {
		this.currentKeyPair = currentKeyPair;
	}

	@Embedded
	@Column(name = "last_key_pair")
	@AttributeOverrides( {
            @AttributeOverride(name="publicKey", column = @Column(name="last_public_key")),
            @AttributeOverride(name="privateKey", column = @Column(name="last_private_key")),
            @AttributeOverride(name="validFrom", column = @Column(name="last_valid_from")),
            @AttributeOverride(name="expired", column = @Column(name="last_expired")),
            @AttributeOverride(name="ydkBookId", column = @Column(name="last_ydkBookId"))
    } )
	public Key getLastKeyPair() {
		return this.lastKeyPair;
	}

	public void setLastKeyPair(Key lastKeyPair) {
		this.lastKeyPair = lastKeyPair;
	}

	
	@Temporal(TemporalType.DATE)
	@Column(name = "birth_date", length = 0)
	public Date getBirthDate() {
		return this.birthDate;
	}

	public void setBirthDate(Date birthDate) {
		this.birthDate = birthDate;
	}

	@Column(name = "mobile_phone", length = 20)
	public String getMobilePhone() {
		return this.mobilePhone;
	}

	public void setMobilePhone(String mobilePhone) {
		this.mobilePhone = mobilePhone;
	}

	@Column(name = "fix_phone", length = 20)
	public String getFixPhone() {
		return this.fixPhone;
	}

	public void setFixPhone(String fixPhone) {
		this.fixPhone = fixPhone;
	}

	@Column(name = "fax", length = 20)
	public String getFax() {
		return this.fax;
	}

	public void setFax(String fax) {
		this.fax = fax;
	}

	@Column(name = "portrait")
	public String getPortrait() {
		return this.portrait;
	}

	public void setPortrait(String portrait) {
		this.portrait = portrait;
	}

	@Column(name = "security_question")
	public String getSecurityQuestion() {
		return this.securityQuestion;
	}

	public void setSecurityQuestion(String securityQuestion) {
		this.securityQuestion = securityQuestion;
	}

	@Column(name = "sequrity_answer")
	public String getSequrityAnswer() {
		return this.sequrityAnswer;
	}

	public void setSequrityAnswer(String sequrityAnswer) {
		this.sequrityAnswer = sequrityAnswer;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "register_date", length = 0)
	public Date getRegisterDate() {
		return this.registerDate;
	}

	public void setRegisterDate(Date registerDate) {
		this.registerDate = registerDate;
	}

	@Column(name = "personal_id")
	public String getPersonalId() {
		return this.personalId;
	}

	public void setPersonalId(String personalId) {
		this.personalId = personalId;
	}

	@Column(name = "personal_id_type")
	public String getPersonalIdType() {
		return this.personalIdType;
	}

	public void setPersonalIdType(String personalIdType) {
		this.personalIdType = personalIdType;
	}

	@Column(name = "magic_number")
	public Long getMagicNumber() {
		return this.magicNumber;
	}

	public void setMagicNumber(Long magicNumber) {
		this.magicNumber = magicNumber;
	}

	@Column(name = "last_magic_number")
	public Long getLastMagicNumber() {
		return this.lastMagicNumber;
	}

	public void setLastMagicNumber(Long lastMagicNumber) {
		this.lastMagicNumber = lastMagicNumber;
	}
	
	@Column(name = "is_actived")
	public Boolean getIsActived() {
		return this.isActived;
	}
	public void setIsActived(Boolean isActived) {
		this.isActived = isActived;
	}
	
	@OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE,
			mappedBy = "reader")
	public List<ReaderComment> getReaderComments() {
		return this.readerComments;
	}
	public void setReaderComments(List<ReaderComment> readerComments) {
		this.readerComments = readerComments;
	}
	
	@OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE,
			mappedBy = "reader")
	public List<BookMark> getBookMarks() {
		return this.bookMarks;
	}
	public void setBookMarks(List<BookMark> bookMarks) {
		this.bookMarks = bookMarks;
	}
	
	@OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE,
			mappedBy = "reader")
	public List<Evaluation> getEvaluations() {
		return this.evaluations;
	}
	public void setEvaluations(List<Evaluation> evaluations) {
		this.evaluations = evaluations;
	}
	
	@OneToMany(fetch = FetchType.LAZY, cascade={CascadeType.PERSIST, CascadeType.REMOVE},
			mappedBy = "reader")
	public List<BookShelf> getBookShelves() {
		return this.bookShelves;
	}
	public void setBookShelves(List<BookShelf> bookShelves) {
		this.bookShelves = bookShelves;
	}
	
	@OneToMany(fetch = FetchType.LAZY, cascade={CascadeType.REMOVE},
			mappedBy = "reader")
	public List<Transaction> getTransactions() {
		return this.transactions;
	}

	public void setTransactions(List<Transaction> transactions) {
		this.transactions = transactions;
	}
	
	
	
	@Transient
	public Reader setToPlainObject(Reader instance)
	{
		//Get self
		getRealName();
		//Eager get @ManytoOne, @OnetoOne
//		if (instance.getAddress() != null)
//		instance.setAddress(
//				instance.getAddress().setToPlainObjectQuick(instance.getAddress()));
		
		Reader result = new Reader();
		result.cloneReader(this);
		
//		if (result.getCurrentKeyPair() != null)
//			result.setCurrentKeyPair(
//					result.getCurrentKeyPair().setToPlainObjectQuick(result.getCurrentKeyPair()));
//		if (result.getLastKeyPair() != null)
//			result.setLastKeyPair(
//					result.getLastKeyPair().setToPlainObjectQuick(result.getLastKeyPair()));
		
		if (getPartner() != null)
			result.setPartner(
					getPartner().setToPlainObjectQuick(getPartner()));
		
		//Null oneToMany;
		result.setBookMarks(null);
		result.setBookShelves(null);
		result.setEvaluations(null);
		result.setReaderComments(null);
		result.setTransactions(null);

		return result;
	}
	
	@Transient
	public Reader setToPlainObjectQuick(Reader instance)
	{
		//Get self
		getRealName();
		Reader result = new Reader();
		result.cloneReader(this);
		
		//Eager get @ManytoOne, @OnetoOne
		
//		result.setCurrentKeyPair(null);
//		
//		result.setLastKeyPair(null);
		
		result.setPartner(null);
		
		//Null oneToMany;
		result.setBookMarks(null);
		result.setBookShelves(null);
		result.setEvaluations(null);
		result.setReaderComments(null);
		result.setTransactions(null);

		return result;
	}
	
	
	public void cloneReader(Reader reader) {
		id =reader.id;
		address =reader.address;
		partner =reader.partner;
		nickName =reader.nickName;
		email =reader.email;
		realName =reader.realName;
		currentKeyPair =reader.currentKeyPair;
		lastKeyPair =reader.lastKeyPair;
		birthDate =reader.birthDate;
		mobilePhone =reader.mobilePhone;
		fixPhone =reader.fixPhone;
		fax =reader.fax;
		portrait =reader.portrait;
		securityQuestion =reader.securityQuestion;
		sequrityAnswer =reader.sequrityAnswer;
		registerDate =reader.registerDate;
		personalId =reader.personalId;
		personalIdType =reader.personalIdType;
		magicNumber =reader.magicNumber;
		lastMagicNumber =reader.lastMagicNumber;
		isActived =reader.isActived;
		readerComments =reader.readerComments;
		bookMarks =reader.bookMarks;
		evaluations =reader.evaluations;
		bookShelves =reader.bookShelves;
		transactions =reader.transactions;
	}

}
