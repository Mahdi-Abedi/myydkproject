package com.ydk.account.persistence.entity;

// Generated Feb 6, 2010 3:22:38 PM by Hibernate Tools 3.2.4.GA

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Transient;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;


/**
 * TransactionType generated by hbm2java
 */
@Entity
@Table(name = "transaction_type", catalog = "ydk")
public class TransactionType implements java.io.Serializable {

	private Long id;
	private String type;
	private List<Transaction> transactions = new ArrayList<Transaction>(0);

	public TransactionType() {
	}

	public TransactionType(String type) {
		this.type = type;
	}

	public TransactionType(String type, List<Transaction> transactions) {
		this.type = type;
		this.transactions = transactions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "type", nullable = false)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "transactionType")
	public List<Transaction> getTransactions() {
		return this.transactions;
	}

	public void setTransactions(List<Transaction> transactions) {
		this.transactions = transactions;
	}
	
	
	@Transient
	public TransactionType setToPlainObject(TransactionType instance)
	{
		//Get self
		getType();
		//Eager get @ManytoOne, @OnetoOne
		TransactionType result = new TransactionType();
		result.cloneTransactionType(this);
		
		//Null oneToMany;
		result.setTransactions(null);

		return result;
	}
	
	@Transient
	public TransactionType setToPlainObjectQuick(TransactionType instance)
	{
		//Get self
		getType();
		//Eager get @ManytoOne, @OnetoOne
		TransactionType result = new TransactionType();
		result.cloneTransactionType(this);
		
		//Null oneToMany;
		result.setTransactions(null);

		return result;
	}
	
	public void cloneTransactionType(TransactionType transactionType) {
		id = transactionType.id;
		type = transactionType.type;
		transactions = transactionType.transactions;
	}

}
