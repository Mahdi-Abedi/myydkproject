package com.ydk.account.persistence.entity;

// Generated Feb 6, 2010 3:22:38 PM by Hibernate Tools 3.2.4.GA

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import com.ydk.book.persistence.entity.Book;

/**
 * Transaction generated by hbm2java
 */
@Entity
@Table(name = "book_mark", catalog = "ydk")
public class BookMark implements java.io.Serializable {

	private Long id;
	private Reader reader;
	private Book book;
	private Integer chapter;
	private Integer section;
	private Integer page;
	private String comment;//255
	private Date date;

	public BookMark() {
	}

	/**
	 * @param reader
	 * @param book
	 * @param chapter
	 * @param section
	 * @param page
	 * @param comment
	 * @param date
	 */
	public BookMark(Reader reader, Book book, Integer chapter, Integer section,
			Integer page, String comment, Date date) {
		super();
		this.reader = reader;
		this.book = book;
		this.chapter = chapter;
		this.section = section;
		this.page = page;
		this.comment = comment;
		this.date = date;
	}



	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}
	public void setId(Long id) {
		this.id = id;
	}
	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "reader")
	public Reader getReader() {
		return this.reader;
	}

	public void setReader(Reader reader) {
		this.reader = reader;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "book")
	public Book getBook() {
		return this.book;
	}
	public void setBook(Book book) {
		this.book = book;
	}


	@Column(name = "chapter")
	public Integer getChapter() {
		return this.chapter;
	}
	public void setChapter(Integer chapter) {
		this.chapter = chapter;
	}
	
	@Column(name = "section")
	public Integer getSection() {
		return this.section;
	}
	public void setSection(Integer section) {
		this.section = section;
	}
	
	@Column(name = "page")
	public Integer getPage() {
		return this.page;
	}
	public void setPage(Integer page) {
		this.page = page;
	}

	@Column(name = "comment")
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date", nullable = false)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}
	
	@Transient
	public BookMark setToPlainObject(BookMark instance)
	{
		//Get self
		getComment();

		BookMark result = new BookMark();
		result.cloneBookMark(this);
		//Eager get @ManytoOne, @OnetoOne
		if (getReader() != null)
			result.setReader(getReader().setToPlainObjectQuick(getReader()));
		if (instance.getBook() != null)
			result.setBook(getBook().setToPlainObjectQuick(getBook()));
		
		
		return result;
	}
	
	@Transient
	public BookMark setToPlainObjectQuick(BookMark instance)
	{
		getComment();
		BookMark result = new BookMark();
		
		result.cloneBookMark(this);
		//Eager get @ManytoOne, @OnetoOne
		result.setBook(null);
		result.setReader(null);
		
		return result;
	}
	
	public void cloneBookMark(BookMark instance) {
		id = instance.id;
		reader = instance.reader;
		book = instance.book;
		chapter = instance.chapter;
		section = instance.section;
		page = instance.page;
		comment = instance.comment;
		date = instance.date;
	}

}
