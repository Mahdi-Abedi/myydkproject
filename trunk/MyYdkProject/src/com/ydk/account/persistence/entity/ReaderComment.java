package com.ydk.account.persistence.entity;

// Generated Feb 6, 2010 3:22:38 PM by Hibernate Tools 3.2.4.GA

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Transaction generated by hbm2java
 */
@Entity
@Table(name = "reader_comment", catalog = "ydk")
public class ReaderComment implements java.io.Serializable {

	private Long id;
	private Reader reader;
	private Long resourceId;
	private String resourceType;
	private String comment;//255
	private Date date;

	public ReaderComment() {
	}

	public ReaderComment(Reader reader, Long resourceId, String resourceType,
			String comment, Date date) {
		this.reader = reader;
		this.resourceId = resourceId;
		this.resourceType = resourceType;
		this.comment = comment;
		this.date = date;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}
	public void setId(Long id) {
		this.id = id;
	}
	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "reader")
	public Reader getReader() {
		return this.reader;
	}

	public void setReader(Reader reader) {
		this.reader = reader;
	}
	
	@Column(name = "resource_id", nullable = false)
	public Long getResourceId() {
		return this.resourceId;
	}
	public void setResourceId(Long id) {
		this.resourceId = id;
	}

	@Column(name = "resource_type", nullable = false)
	public String getResourceType() {
		return this.resourceType;
	}

	public void setResourceType(String resourceType) {
		this.resourceType = resourceType;
	}


	@Column(name = "comment", nullable = false)
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date", nullable = false)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}
	
	@Transient
	public ReaderComment setToPlainObject(ReaderComment instance)
	{
		//Get self
		getComment();
		ReaderComment result = new ReaderComment();
		result.cloneInstance(this);
		//Eager get @ManytoOne, @OnetoOne

		if (getReader() != null)
			result.setReader(getReader().setToPlainObjectQuick(getReader()));
		

		//Null oneToMany;
		

		return result;
	}
	
	@Transient
	public ReaderComment setToPlainObjectQuick(ReaderComment instance)
	{
		//Get self
		getComment();
		ReaderComment result = new ReaderComment();
		result.cloneInstance(this);
		
		//Eager get @ManytoOne, @OnetoOne

		result.setReader(null);
		

		//Null oneToMany;
		return result;
		
	}
	
	public void cloneInstance(ReaderComment instance) {
		id = instance.id;
		reader = instance.reader;
		resourceId = instance.resourceId;
		resourceType = instance.resourceType;
		comment = instance.comment;
		date = instance.date;
	}

}
