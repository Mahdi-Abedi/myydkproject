package com.ydk.account.persistence.entity;

// Generated Feb 6, 2010 2:13:01 PM by Hibernate Tools 3.2.4.GA

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.AttributeOverrides;
import javax.persistence.AttributeOverride;
import javax.persistence.CascadeType;
import javax.persistence.Embedded;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

/**
 * Partner generated by hbm2java
 */
@Entity
@Table(name = "partner", catalog = "ydk", uniqueConstraints = @UniqueConstraint(columnNames = {
		"name", "email" }))
public class Partner implements java.io.Serializable {

	private Long id;
	private PartnerType partnerType;
	private String name;
	private String email;
	private String contactPerson;
	private Key currentKeyPair;
	private Key lastKeyPair;
	private Long magicNumber;
	private Long lastMagicNumber;
	private String fixPhone;
	private String mobilePhone;
	private String fax;
	private String postAddress;
	private String region;
	private String zipCode;
	private String logo;
	private Boolean isActived;
	private List<Reader> readers = new ArrayList<Reader>(0);
	private List<Transaction> transactions = new ArrayList<Transaction>(0);

	public Partner() {
	}

	public Partner(PartnerType partnerType, String name, String email) {
		this.partnerType = partnerType;
		this.name = name;
		this.email = email;
	}

	public Partner(Long id, PartnerType partnerType, String name, String email,
			String contactPerson, Key currentKeyPair, Key lastKeyPair,
			Long magicNumber, Long lastMagicNumber, String fixPhone,
			String mobilePhone, String fax, String postAddress, String region,
			String zipCode, String logo, Boolean isActived,
			List<Reader> readers, List<Transaction> transactions) {
		this.id = id;
		this.partnerType = partnerType;
		this.name = name;
		this.email = email;
		this.contactPerson = contactPerson;
		this.currentKeyPair = currentKeyPair;
		this.lastKeyPair = lastKeyPair;
		this.magicNumber = magicNumber;
		this.lastMagicNumber = lastMagicNumber;
		this.fixPhone = fixPhone;
		this.mobilePhone = mobilePhone;
		this.fax = fax;
		this.postAddress = postAddress;
		this.region = region;
		this.zipCode = zipCode;
		this.logo = logo;
		this.isActived = isActived;
		this.readers = readers;
		this.transactions = transactions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "type")
	public PartnerType getPartnerType() {
		return this.partnerType;
	}

	public void setPartnerType(PartnerType partnerType) {
		this.partnerType = partnerType;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "email", nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "contact_person")
	public String getContactPerson() {
		return this.contactPerson;
	}

	public void setContactPerson(String contactPerson) {
		this.contactPerson = contactPerson;
	}

	@Embedded
	@Column(name = "current_key_pair")
	public Key getCurrentKeyPair() {
		return this.currentKeyPair;
	}

	public void setCurrentKeyPair(Key currentKeyPair) {
		this.currentKeyPair = currentKeyPair;
	}

	@Embedded
	@Column(name = "last_key_pair")
	@AttributeOverrides( {
            @AttributeOverride(name="publicKey", column = @Column(name="last_public_key")),
            @AttributeOverride(name="privateKey", column = @Column(name="last_private_key")),
            @AttributeOverride(name="validFrom", column = @Column(name="last_valid_from")),
            @AttributeOverride(name="expired", column = @Column(name="last_expired")),
            @AttributeOverride(name="ydkBookId", column = @Column(name="last_ydkBookId"))
    } )
	public Key getLastKeyPair() {
		return this.lastKeyPair;
	}

	public void setLastKeyPair(Key lastKeyPair) {
		this.lastKeyPair = lastKeyPair;
	}

	@Column(name = "magic_number")
	public Long getMagicNumber() {
		return this.magicNumber;
	}

	public void setMagicNumber(Long magicNumber) {
		this.magicNumber = magicNumber;
	}

	@Column(name = "last_magic_number")
	public Long getLastMagicNumber() {
		return this.lastMagicNumber;
	}

	public void setLastMagicNumber(Long lastMagicNumber) {
		this.lastMagicNumber = lastMagicNumber;
	}

	@Column(name = "fix_phone", length = 20)
	public String getFixPhone() {
		return this.fixPhone;
	}

	public void setFixPhone(String fixPhone) {
		this.fixPhone = fixPhone;
	}

	@Column(name = "mobile_phone", length = 20)
	public String getMobilePhone() {
		return this.mobilePhone;
	}

	public void setMobilePhone(String mobilePhone) {
		this.mobilePhone = mobilePhone;
	}

	@Column(name = "fax", length = 20)
	public String getFax() {
		return this.fax;
	}

	public void setFax(String fax) {
		this.fax = fax;
	}

	@Column(name = "post_address")
	public String getPostAddress() {
		return this.postAddress;
	}

	public void setPostAddress(String postAddress) {
		this.postAddress = postAddress;
	}

	@Column(name = "region")
	public String getRegion() {
		return this.region;
	}

	public void setRegion(String region) {
		this.region = region;
	}

	@Column(name = "zip_code", length = 20)
	public String getZipCode() {
		return this.zipCode;
	}

	public void setZipCode(String zipCode) {
		this.zipCode = zipCode;
	}

	@Column(name = "logo")
	public String getLogo() {
		return this.logo;
	}

	public void setLogo(String logo) {
		this.logo = logo;
	}
	
	@Column(name = "is_actived")
	public Boolean getIsActived() {
		return this.isActived;
	}
	public void setIsActived(Boolean isActived) {
		this.isActived = isActived;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "partner")
	public List<Reader> getReaders() {
		return this.readers;
	}

	public void setReaders(List<Reader> readers) {
		this.readers = readers;
	}
	@OneToMany(fetch = FetchType.LAZY, cascade={CascadeType.REMOVE},
			mappedBy = "partner")
	public List<Transaction> getTransactions() {
		return this.transactions;
	}

	public void setTransactions(List<Transaction> transactions) {
		this.transactions = transactions;
	}
	
	@Transient
	public Partner setToPlainObject(Partner instance)
	{
		//getSelf
		getName();
		Partner result = new Partner();
		result.cloneInstance(this);
		
		//Eager get @ManytoOne, 
		if (result.getPartnerType() != null)
		{
			result.getPartnerType().getType();
			result.getPartnerType().setPartners(null);
		}
		if (result.getCurrentKeyPair() != null)
			result.setCurrentKeyPair(
					result.getCurrentKeyPair().setToPlainObject(result.getCurrentKeyPair()));
		if (result.getLastKeyPair() != null)
			result.setLastKeyPair(
					result.getLastKeyPair().setToPlainObject(result.getLastKeyPair()));
		//Null oneToMany;
		
		result.setReaders(null);
		result.setTransactions(null);
		//getCurrentKeyPair();
		return result;
	}
	
	@Transient
	public Partner setToPlainObjectQuick(Partner instance)
	{
		//getSelf
		getName();
		Partner result = new Partner();
		result.cloneInstance(this);
		//Eager get @ManytoOne, 
		if (result.getPartnerType() != null)
		{
			result.getPartnerType().getType();
			result.getPartnerType().setPartners(null);
		}
		result.setCurrentKeyPair(null);
		
		result.setLastKeyPair(null);
		//Null oneToMany;
		
		result.setReaders(null);
		result.setTransactions(null);
		//getCurrentKeyPair();
		return result;
	}
	
	
	public void cloneInstance(Partner instance) {
		id = instance.id;
		partnerType = instance.partnerType;
		name = instance.name;
		email = instance.email;
		contactPerson = instance.contactPerson;
		currentKeyPair = instance.currentKeyPair;
		lastKeyPair = instance.lastKeyPair;
		magicNumber = instance.magicNumber;
		lastMagicNumber = instance.lastMagicNumber;
		fixPhone = instance.fixPhone;
		mobilePhone = instance.mobilePhone;
		fax = instance.fax;
		postAddress = instance.postAddress;
		region = instance.region;
		zipCode = instance.zipCode;
		logo = instance.logo;
		isActived = instance.isActived;
		readers = instance.readers;
		transactions = instance.transactions;
	}

}
